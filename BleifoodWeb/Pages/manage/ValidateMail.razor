@using Bleifood.Web.Models
@using Microsoft.AspNetCore.WebUtilities

@page  "/manage/validate/"
@inject NavigationManager navigationManager
@inject Identity identity

<h3>Validierung</h3>

@{
    @functions {
        Models.ValidateUser _validateUser = new ValidateUser();
}   
}


@if (_validateUser.IsValid)
{
    <div>
        <div class="easyBox">
            Du hast Deinen Account erfolgreich aktiviert. <br/><a href="/manage/edit/mine">Du kannst Dich nun einloggen und Dein Angebot erstellen</a>.
        </div>
    </div>
}
@if (_validateUser.LastError != null)
{
    <div>
        <div class="easyBox">
            <div>
                <br />
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <i class="fa fa-ban"></i>@_validateUser.LastError
                </div>
            </div>
        </div>
    </div>
}



@code {

    protected async override Task OnInitializedAsync()
    {
        _validateUser.IsValid = false;
        var url = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        var queryValues = QueryHelpers.ParseQuery(url.Query);

        _validateUser.Hash = queryValues["auth"];
        _validateUser.UserId = queryValues["userId"];

        _validateUser.IsValid = await identity.Validate(_validateUser);
    }
}
